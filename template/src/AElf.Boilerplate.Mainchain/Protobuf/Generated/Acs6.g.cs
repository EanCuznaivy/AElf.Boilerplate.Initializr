// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: acs6.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Acs6 {

  /// <summary>Holder for reflection information generated from acs6.proto</summary>
  internal static partial class Acs6Reflection {

    #region Descriptor
    /// <summary>File descriptor for acs6.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static Acs6Reflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgphY3M2LnByb3RvEgRhY3M2GhJhZWxmL29wdGlvbnMucHJvdG8aD2FlbGYv",
            "Y29yZS5wcm90byI4ChhSZXF1ZXN0UmFuZG9tTnVtYmVySW5wdXQSHAoUbWlu",
            "aW11bV9ibG9ja19oZWlnaHQYASABKBIiSQoRUmFuZG9tTnVtYmVyT3JkZXIS",
            "FAoMYmxvY2tfaGVpZ2h0GAEgASgSEh4KCnRva2VuX2hhc2gYAiABKAsyCi5h",
            "ZWxmLkhhc2giegoaUmFuZG9tTnVtYmVyUmVxdWVzdEhhbmRsZWQSIAoJcmVx",
            "dWVzdGVyGAEgASgLMg0uYWVsZi5BZGRyZXNzEh4KCnRva2VuX2hhc2gYAiAB",
            "KAsyCi5hZWxmLkhhc2gSFAoMYmxvY2tfaGVpZ2h0GAMgASgSOgSguxgBIl4K",
            "FVJhbmRvbU51bWJlckdlbmVyYXRlZBIeCgp0b2tlbl9oYXNoGAEgASgLMgou",
            "YWVsZi5IYXNoEh8KC3JhbmRvbV9oYXNoGAIgASgLMgouYWVsZi5IYXNoOgSg",
            "uxgBMp0BChxSYW5kb21OdW1iZXJQcm92aWRlckNvbnRyYWN0ElAKE1JlcXVl",
            "c3RSYW5kb21OdW1iZXISHi5hY3M2LlJlcXVlc3RSYW5kb21OdW1iZXJJbnB1",
            "dBoXLmFjczYuUmFuZG9tTnVtYmVyT3JkZXIiABIrCg9HZXRSYW5kb21OdW1i",
            "ZXISCi5hZWxmLkhhc2gaCi5hZWxmLkhhc2giAEIJipL0AQRhY3M2YgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::AElf.OptionsReflection.Descriptor, global::AElf.Types.CoreReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Acs6.RequestRandomNumberInput), global::Acs6.RequestRandomNumberInput.Parser, new[]{ "MinimumBlockHeight" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Acs6.RandomNumberOrder), global::Acs6.RandomNumberOrder.Parser, new[]{ "BlockHeight", "TokenHash" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Acs6.RandomNumberRequestHandled), global::Acs6.RandomNumberRequestHandled.Parser, new[]{ "Requester", "TokenHash", "BlockHeight" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Acs6.RandomNumberGenerated), global::Acs6.RandomNumberGenerated.Parser, new[]{ "TokenHash", "RandomHash" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  internal sealed partial class RequestRandomNumberInput : pb::IMessage<RequestRandomNumberInput> {
    private static readonly pb::MessageParser<RequestRandomNumberInput> _parser = new pb::MessageParser<RequestRandomNumberInput>(() => new RequestRandomNumberInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestRandomNumberInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Acs6.Acs6Reflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestRandomNumberInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestRandomNumberInput(RequestRandomNumberInput other) : this() {
      minimumBlockHeight_ = other.minimumBlockHeight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestRandomNumberInput Clone() {
      return new RequestRandomNumberInput(this);
    }

    /// <summary>Field number for the "minimum_block_height" field.</summary>
    public const int MinimumBlockHeightFieldNumber = 1;
    private long minimumBlockHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MinimumBlockHeight {
      get { return minimumBlockHeight_; }
      set {
        minimumBlockHeight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestRandomNumberInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestRandomNumberInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MinimumBlockHeight != other.MinimumBlockHeight) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MinimumBlockHeight != 0L) hash ^= MinimumBlockHeight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MinimumBlockHeight != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(MinimumBlockHeight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MinimumBlockHeight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(MinimumBlockHeight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestRandomNumberInput other) {
      if (other == null) {
        return;
      }
      if (other.MinimumBlockHeight != 0L) {
        MinimumBlockHeight = other.MinimumBlockHeight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MinimumBlockHeight = input.ReadSInt64();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class RandomNumberOrder : pb::IMessage<RandomNumberOrder> {
    private static readonly pb::MessageParser<RandomNumberOrder> _parser = new pb::MessageParser<RandomNumberOrder>(() => new RandomNumberOrder());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RandomNumberOrder> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Acs6.Acs6Reflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RandomNumberOrder() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RandomNumberOrder(RandomNumberOrder other) : this() {
      blockHeight_ = other.blockHeight_;
      tokenHash_ = other.tokenHash_ != null ? other.tokenHash_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RandomNumberOrder Clone() {
      return new RandomNumberOrder(this);
    }

    /// <summary>Field number for the "block_height" field.</summary>
    public const int BlockHeightFieldNumber = 1;
    private long blockHeight_;
    /// <summary>
    /// Orderer is possible to get a random number after this height.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BlockHeight {
      get { return blockHeight_; }
      set {
        blockHeight_ = value;
      }
    }

    /// <summary>Field number for the "token_hash" field.</summary>
    public const int TokenHashFieldNumber = 2;
    private global::AElf.Types.Hash tokenHash_;
    /// <summary>
    /// Token to get the random number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash TokenHash {
      get { return tokenHash_; }
      set {
        tokenHash_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RandomNumberOrder);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RandomNumberOrder other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BlockHeight != other.BlockHeight) return false;
      if (!object.Equals(TokenHash, other.TokenHash)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BlockHeight != 0L) hash ^= BlockHeight.GetHashCode();
      if (tokenHash_ != null) hash ^= TokenHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BlockHeight != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(BlockHeight);
      }
      if (tokenHash_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TokenHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BlockHeight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(BlockHeight);
      }
      if (tokenHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TokenHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RandomNumberOrder other) {
      if (other == null) {
        return;
      }
      if (other.BlockHeight != 0L) {
        BlockHeight = other.BlockHeight;
      }
      if (other.tokenHash_ != null) {
        if (tokenHash_ == null) {
          TokenHash = new global::AElf.Types.Hash();
        }
        TokenHash.MergeFrom(other.TokenHash);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BlockHeight = input.ReadSInt64();
            break;
          }
          case 18: {
            if (tokenHash_ == null) {
              TokenHash = new global::AElf.Types.Hash();
            }
            input.ReadMessage(TokenHash);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class RandomNumberRequestHandled : pb::IMessage<RandomNumberRequestHandled> {
    private static readonly pb::MessageParser<RandomNumberRequestHandled> _parser = new pb::MessageParser<RandomNumberRequestHandled>(() => new RandomNumberRequestHandled());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RandomNumberRequestHandled> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Acs6.Acs6Reflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RandomNumberRequestHandled() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RandomNumberRequestHandled(RandomNumberRequestHandled other) : this() {
      requester_ = other.requester_ != null ? other.requester_.Clone() : null;
      tokenHash_ = other.tokenHash_ != null ? other.tokenHash_.Clone() : null;
      blockHeight_ = other.blockHeight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RandomNumberRequestHandled Clone() {
      return new RandomNumberRequestHandled(this);
    }

    /// <summary>Field number for the "requester" field.</summary>
    public const int RequesterFieldNumber = 1;
    private global::AElf.Types.Address requester_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Requester {
      get { return requester_; }
      set {
        requester_ = value;
      }
    }

    /// <summary>Field number for the "token_hash" field.</summary>
    public const int TokenHashFieldNumber = 2;
    private global::AElf.Types.Hash tokenHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash TokenHash {
      get { return tokenHash_; }
      set {
        tokenHash_ = value;
      }
    }

    /// <summary>Field number for the "block_height" field.</summary>
    public const int BlockHeightFieldNumber = 3;
    private long blockHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BlockHeight {
      get { return blockHeight_; }
      set {
        blockHeight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RandomNumberRequestHandled);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RandomNumberRequestHandled other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Requester, other.Requester)) return false;
      if (!object.Equals(TokenHash, other.TokenHash)) return false;
      if (BlockHeight != other.BlockHeight) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (requester_ != null) hash ^= Requester.GetHashCode();
      if (tokenHash_ != null) hash ^= TokenHash.GetHashCode();
      if (BlockHeight != 0L) hash ^= BlockHeight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (requester_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Requester);
      }
      if (tokenHash_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TokenHash);
      }
      if (BlockHeight != 0L) {
        output.WriteRawTag(24);
        output.WriteSInt64(BlockHeight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (requester_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Requester);
      }
      if (tokenHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TokenHash);
      }
      if (BlockHeight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(BlockHeight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RandomNumberRequestHandled other) {
      if (other == null) {
        return;
      }
      if (other.requester_ != null) {
        if (requester_ == null) {
          Requester = new global::AElf.Types.Address();
        }
        Requester.MergeFrom(other.Requester);
      }
      if (other.tokenHash_ != null) {
        if (tokenHash_ == null) {
          TokenHash = new global::AElf.Types.Hash();
        }
        TokenHash.MergeFrom(other.TokenHash);
      }
      if (other.BlockHeight != 0L) {
        BlockHeight = other.BlockHeight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (requester_ == null) {
              Requester = new global::AElf.Types.Address();
            }
            input.ReadMessage(Requester);
            break;
          }
          case 18: {
            if (tokenHash_ == null) {
              TokenHash = new global::AElf.Types.Hash();
            }
            input.ReadMessage(TokenHash);
            break;
          }
          case 24: {
            BlockHeight = input.ReadSInt64();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class RandomNumberGenerated : pb::IMessage<RandomNumberGenerated> {
    private static readonly pb::MessageParser<RandomNumberGenerated> _parser = new pb::MessageParser<RandomNumberGenerated>(() => new RandomNumberGenerated());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RandomNumberGenerated> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Acs6.Acs6Reflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RandomNumberGenerated() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RandomNumberGenerated(RandomNumberGenerated other) : this() {
      tokenHash_ = other.tokenHash_ != null ? other.tokenHash_.Clone() : null;
      randomHash_ = other.randomHash_ != null ? other.randomHash_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RandomNumberGenerated Clone() {
      return new RandomNumberGenerated(this);
    }

    /// <summary>Field number for the "token_hash" field.</summary>
    public const int TokenHashFieldNumber = 1;
    private global::AElf.Types.Hash tokenHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash TokenHash {
      get { return tokenHash_; }
      set {
        tokenHash_ = value;
      }
    }

    /// <summary>Field number for the "random_hash" field.</summary>
    public const int RandomHashFieldNumber = 2;
    private global::AElf.Types.Hash randomHash_;
    /// <summary>
    /// Random Number
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash RandomHash {
      get { return randomHash_; }
      set {
        randomHash_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RandomNumberGenerated);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RandomNumberGenerated other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TokenHash, other.TokenHash)) return false;
      if (!object.Equals(RandomHash, other.RandomHash)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (tokenHash_ != null) hash ^= TokenHash.GetHashCode();
      if (randomHash_ != null) hash ^= RandomHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (tokenHash_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TokenHash);
      }
      if (randomHash_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RandomHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (tokenHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TokenHash);
      }
      if (randomHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RandomHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RandomNumberGenerated other) {
      if (other == null) {
        return;
      }
      if (other.tokenHash_ != null) {
        if (tokenHash_ == null) {
          TokenHash = new global::AElf.Types.Hash();
        }
        TokenHash.MergeFrom(other.TokenHash);
      }
      if (other.randomHash_ != null) {
        if (randomHash_ == null) {
          RandomHash = new global::AElf.Types.Hash();
        }
        RandomHash.MergeFrom(other.RandomHash);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (tokenHash_ == null) {
              TokenHash = new global::AElf.Types.Hash();
            }
            input.ReadMessage(TokenHash);
            break;
          }
          case 18: {
            if (randomHash_ == null) {
              RandomHash = new global::AElf.Types.Hash();
            }
            input.ReadMessage(RandomHash);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
